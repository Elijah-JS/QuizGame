{"version":3,"file":"static/js/71.5131017a.chunk.js","mappings":"iKAIO,SAASA,EAAeC,GAC7B,OAAKA,EACa,OAAdA,EAAKC,KAAsBD,EAAKE,WAAa,OAAS,QACxC,OAAdF,EAAKC,MAAiBE,MAAMC,QAAQJ,EAAKK,SACJ,QAAvCC,EAAmB,QAAnBC,EAAOP,EAAKK,eAAO,IAAAE,OAAA,EAAZA,EAAeP,EAAKQ,oBAAY,IAAAF,EAAAA,EAAI,IAErCN,EAAKS,UAAY,IAAIC,WALX,GAEsC,IAADJ,EAAAC,CAIzD,CAGA,MAAMI,EAAoB,CACxB,CACEC,KAAM,CAAC,SAAU,WAAY,UAAW,SACxCC,MAAO,CACL,4BACA,2CACA,wCACA,wBACA,oCAGJ,CACED,KAAM,CAAC,YACPC,MAAO,CACL,0BACA,yCACA,4CACA,qCAGJ,CACED,KAAM,CAAC,SAAU,iBAAkB,eAAgB,SACnDC,MAAO,CACL,kCACA,6BACA,0BACA,wCAGJ,CACED,KAAM,CAAC,KAAM,sBACbC,MAAO,CACL,wCACA,wCACA,2CACA,2CAGJ,CACED,KAAM,CAAC,QAAS,SAAU,qBAC1BC,MAAO,CACL,8CACA,8BACA,sCACA,wCAMAC,EAAsB,CAC1B,+BACA,iCACA,4BACA,mCACA,sCACA,wB,aC9DF,SAASC,EAAcf,EAAMgB,GAAO,IAADC,EACjC,IAAKjB,EAAM,MAAO,CAAEkB,KAAM,SAG1B,GAAkB,OAAdlB,EAAKC,MAA4C,mBAApBD,EAAKE,WACpC,MAAO,CAAEgB,KAAM,MAGjB,GAAkB,OAAdlB,EAAKC,MAAiBE,MAAMC,QAAQJ,EAAKK,UAAYL,EAAKK,QAAQc,QAAU,EAC9E,MAAO,CAAED,KAAM,MAGjB,MAAME,ED8DD,SAA2BpB,EAAMgB,GAA0B,IAADK,EAAA,IAAnBC,EAAaC,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC5D,MAAME,EAA8B,QAAvBJ,EAAGtB,EAAeC,UAAK,IAAAqB,OAAA,EAApBA,EAAsBK,OACtC,IAAKD,EAAS,OAAO,KAGrB,MAAME,EAAW,GACjB,IAAK,MAAMC,KAAKZ,EAAM,CAAC,IAADa,EACpB,MAAMC,EAAuB,QAApBD,EAAG9B,EAAe6B,UAAE,IAAAC,OAAA,EAAjBA,EAAmBH,OAC1BI,GACDA,EAAIC,gBAAkBN,EAAQM,eAClCJ,EAASK,KAAKF,EAChB,CAGA,MAAMG,EAAUtB,EAAkBuB,KAAMC,GAvB1C,WAA2C,IAARC,EAAKb,UAAAJ,OAAA,EAAAI,UAAA,QAAAC,EACtC,MAAMa,GADoBd,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACZQ,cACjB,OAAOK,EAAMxB,KAAK0B,KAAMC,GAAMF,EAAEG,SAASD,GAC3C,CAoBgDE,CAAazC,EAAK0C,OAAQP,IAClEQ,EAAYV,EAAUA,EAAQpB,MAAQ,GAGtC+B,EAAazC,MAAM0C,KAAK,IAAIC,IAAI,IAAInB,KAAagB,KAAc7B,KAClEiC,OAAQZ,GAAMA,GAAKA,EAAEhB,QAAU,GAAKgB,EAAEhB,QAAU,KAAOgB,EAAEJ,gBAAkBN,EAAQM,eAGhFiB,EAAOC,KAAKC,IAAI,EAAGD,KAAKE,IAAI7B,EAAgB,EAAGsB,EAAWzB,SAChE,GAAI6B,EAAO,EAET,OAAO,KAGT,MAAMI,GAAcC,EAAAA,EAAAA,GAAQT,GAAYU,MAAM,EAAGN,GAC3C3C,GAAUgD,EAAAA,EAAAA,GAAQ,CAAC5B,KAAY2B,IAC/B5C,EAAcH,EAAQkD,UAAWpB,GAAMA,IAAMV,GAEnD,MAAO,CAAEpB,UAASG,cACpB,CC/FgBgD,CAAkBxD,EAAMgB,EAAM,GAC5C,GAAII,GAASjB,MAAMC,QAAQgB,EAAMf,UAAYe,EAAMf,QAAQc,QAAU,EACnE,MAAO,CAAED,KAAM,UAAWE,SAU5B,MAAO,CAAEF,KAAM,SAAUT,SALT,QADFQ,EACR,OAAJjB,QAAI,IAAJA,OAAI,EAAJA,EAAMS,gBAAQ,IAAAQ,EAAAA,EACE,QAAX,OAAJjB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,OAA8C,kBAAlB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,cAAgC,OAAJR,QAAI,IAAJA,GAAAA,EAAMK,QACnEL,EAAKK,QAAQL,EAAKQ,kBAClBgB,EAGR,CAEe,SAASiC,IACtB,MAAM,KAAEC,EAAI,KAAEC,EAAI,SAAEC,IAAaC,EAAAA,EAAAA,KAE3B7C,GAAO8C,EAAAA,EAAAA,SAAQ,KAAMC,EAAAA,EAAAA,IAAaL,EAAMC,GAAO,CAACD,EAAMC,IACtDK,GAAUF,EAAAA,EAAAA,SAAQ,KACTT,EAAAA,EAAAA,GAAQrC,GAAMsC,MAAM,EAAGM,EAASK,YAAc,IAE1D,CAACjD,EAAM4C,EAASK,cAEZC,EAAGC,IAAQC,EAAAA,EAAAA,UAAS,IACpBC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,OAC9BO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,KAC9BS,EAAaC,IAAkBV,EAAAA,EAAAA,WAAS,GAEzCpE,EAAOgE,EAAQE,GACfa,EAAOhE,EAAcf,EAAMgB,GAEjC,IAAKgD,EAAQ7C,SAAWnB,EACtB,OACEgF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,8BAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAC,iDAMhD,MAAME,EAAc,MAClB,GAAIP,EAAa,OAAO,IACxB,MAAMQ,EAAWd,EAAWL,EAAI,EAAIA,EACpC,OAAOjB,KAAKqC,MAAOD,EAAWrB,EAAQ7C,OAAU,IACjD,EAJmB,GAMdoE,EAAcC,IAClB,MAAMC,EACU,YAAdV,EAAK7D,KACD6D,EAAK3D,MAAMf,QAAQ0E,EAAK3D,MAAMZ,aAC9BT,EAAeC,IAAS+E,EAAKtE,UAAY,SAC/CmE,EAAWc,GAAM,IACZA,EACH,CAAEC,IAAKzB,EAAI,EAAGxB,OAAQ1C,EAAK0C,OAAQkD,KAAgB,OAAVJ,QAAU,IAAVA,EAAAA,EAAc,SAAK/D,QAASgE,MAenEI,EAAUA,KACd1B,EAAK,GACLG,EAAS,GACTE,GAAY,GACZE,EAAU,MACVE,EAAU,IACVE,GAAe,IA0BjB,GAAID,EAAa,CACf,MAAMiB,EAAQ9B,EAAQ7C,OAChB4E,EAAM9C,KAAKqC,MAAOjB,EAAQyB,EAAS,KACzC,OACEd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mFAAkFC,SAAA,EAC/FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,CAAC,kBAAWvB,MAC9EqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wEAAuEC,SAAA,CAAC,WAC9EC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEb,IAAa,IAAEyB,EAAM,KAAGC,EAAI,YAIxEZ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iFAAgFC,UAC7FC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0CAA0Ce,MAAO,CAAEC,MAAO,YAGxD,IAAlBtB,EAAOxD,QACNgE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gEAA+DC,SAAC,+DAI/EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,CAAC,eAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEP,EAAOxD,SAAc,QAEnEgE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SACtBP,EAAOuB,IAAI,CAACR,EAAGC,KACdX,EAAAA,EAAAA,MAAA,MAAcC,UAAU,wDAAuDC,SAAA,EAC7EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,CACtCQ,EAAEC,IAAI,KAAGD,EAAEhD,WAEdsC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,iBAAoB,KACpDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEQ,EAAEE,WAEpCZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,aAAgB,KAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAEQ,EAAEjE,eAVjCkE,UAkBjBR,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDC,EAAAA,EAAAA,KAAA,UACEgB,QAASN,EACTZ,UAAU,gGAA+FC,SAC1G,gBAMT,CAGA,MAAMkB,GACJpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,CAAC,eACzDvB,EAAK,WAAIO,EAAI,EAAE,IAAEF,EAAQ7C,WAEnC6D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wEAAuEC,SAAA,CAAC,WAC9EC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEb,IAAa,IAAEH,QAKvDmC,GACJlB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iFAAgFC,UAC7FC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0CAA0Ce,MAAO,CAAEC,MAAM,GAADK,OAAKlB,EAAW,UAI3F,OACEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mFAAkFC,SAAA,CAC9FkB,EACAC,GAEDlB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAA0CC,SAAElF,EAAK0C,SAGjD,OAAdqC,EAAK7D,OACJiE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SACxB,CAAC,OAAQ,SAASgB,IAAKK,IACtB,MAGMC,EAHYD,KAASvG,EAAKE,WAAa,OAAS,SAIlD,0CACA,kCACJ,OACEiF,EAAAA,EAAAA,KAAA,UAEEgB,QAASA,IArHPM,KACd,GAAIlC,GAA0B,OAAdQ,EAAK7D,KAAe,OACpC,MAAMO,EAAUgF,IAAQzG,EAAKE,WAC7BoE,EAAUoC,GAAMA,GAAKjF,EAAU,EAAI,IACnCiD,EAAU+B,EAAM,OAAS,SACpBhF,GAAS8D,EAAWkB,EAAM,OAAS,SACxCjC,GAAY,IA+GemC,CAAe,SAARJ,GACtBtB,UAAS,GAAAqB,OATA,4DASS,KAAAA,OAAI/B,EAAWiC,EARxB,wDAQ+CtB,SAEvDqB,GAJIA,QAYC,OAAdxB,EAAK7D,MAA+B,YAAd6D,EAAK7D,QAC3B8D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACR,OAAdH,EAAK7D,KAAgBlB,EAAKK,QAAU0E,EAAK3D,MAAMf,SAAS6F,IAAI,CAACU,EAAKjB,KAClE,MAAMkB,EAA6B,OAAd9B,EAAK7D,KAAgBlB,EAAKQ,YAAcuE,EAAK3D,MAAMZ,YAKlEgG,EAJUb,IAAQkB,EAKpB,0CAJWpC,IAAWkB,EAMtB,kCACA,kCACJ,OACER,EAAAA,EAAAA,KAAA,UAEEgB,QAASA,IAvIR,SAACR,GAAyB,IAApBmB,EAAMvF,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,IAAAA,UAAA,GACzB,GAAIgD,GAA2B,OAAdQ,EAAK7D,MAA+B,YAAd6D,EAAK7D,KAAqB,OACjE,MAAM2F,EAAeC,EAAS/B,EAAK3D,MAAMZ,YAAcR,EAAKQ,YACtDH,EAAUyG,EAAS/B,EAAK3D,MAAMf,QAAUL,EAAKK,QAE7CoB,EAAUkE,IAAQkB,EACxBvC,EAAUoC,GAAMA,GAAKjF,EAAU,EAAI,IACnCiD,EAAUiB,GACLlE,GAAS8D,EAAkB,OAAPlF,QAAO,IAAPA,OAAO,EAAPA,EAAUsF,IACnCnB,GAAY,EACd,CA6H6BuC,CAAOpB,EAAmB,YAAdZ,EAAK7D,MAChC+D,UAAS,GAAAqB,OAXA,0DAWS,KAAAA,OAAI/B,EAAWiC,EAVxB,wDAU+CtB,SAEvD0B,GAJIjB,KAQI,YAAdZ,EAAK7D,OACJiE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iCAAgCC,SAAC,+BAMvC,WAAdH,EAAK7D,OACJ8D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6DAA4DC,SAAA,CACvEX,GAQAY,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBH,EAAKtE,UAAYT,EAAKgH,WACtBhC,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA/B,SAAA,CACGH,EAAKtE,WACJuE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,YAAc,IAAEH,EAAKtE,YAGxDT,EAAKgH,UACJ7B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAElF,EAAKgH,gBAhBxD7B,EAAAA,EAAAA,KAAA,UACEgB,QAASA,IAAM3B,GAAY,GAC3BS,UAAU,8FAA6FC,SACxG,YAmBDX,IAAYY,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,yCAI9C,OAAdH,EAAK7D,MAA+B,OAAd6D,EAAK7D,MAA+B,YAAd6D,EAAK7D,OACjDqD,GACAvE,EAAKgH,UACH7B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sFAAqFC,SACjGlF,EAAKgH,WAIZhC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,CACrDX,GAGAY,EAAAA,EAAAA,KAAA,QACEF,UACE,0CACgB,OAAdF,EAAK7D,MAA+B,YAAd6D,EAAK7D,KACxBuD,KAA0B,OAAdM,EAAK7D,KAAgBlB,EAAKQ,YAAcuE,EAAK3D,MAAMZ,aAC5D,2DACA,+CACU,OAAduE,EAAK7D,KACJuD,KAAYzE,EAAKE,WAAa,OAAS,SACpC,2DACA,+CACJ,6CACLgF,SAEc,WAAdH,EAAK7D,KACF,WACe,OAAd6D,EAAK7D,MAA+B,YAAd6D,EAAK7D,KAC5BuD,KAA0B,OAAdM,EAAK7D,KAAgBlB,EAAKQ,YAAcuE,EAAK3D,MAAMZ,aAC7D,UACA,YACFiE,KAAYzE,EAAKE,WAAa,OAAS,SACvC,UACA,eAxBNiF,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAC,0BA4B1CC,EAAAA,EAAAA,KAAA,UACEgB,QAvPKe,KACEhD,EAAI,GAAKF,EAAQ7C,OAE5B2D,GAAe,IAGjBX,EAAKD,EAAI,GACTM,GAAY,GACZE,EAAU,QAgPJO,UAAU,gGAA+FC,SAExGhB,EAAI,GAAKF,EAAQ7C,OAAS,SAAW,cAKhD,C,gBChVO,SAASkC,EAAQ8D,GACtB,MAAMC,EAAI,IAAID,GACd,IAAK,IAAIjD,EAAIkD,EAAEjG,OAAS,EAAG+C,EAAI,EAAGA,IAAK,CACrC,MAAMmD,EAAIpE,KAAKqE,MAAMrE,KAAKsE,UAAYrD,EAAI,KACzCkD,EAAElD,GAAIkD,EAAEC,IAAM,CAACD,EAAEC,GAAID,EAAElD,GAC1B,CACA,OAAOkD,CACT,C","sources":["utils/choices.js","screens/Flashcards/Quiz.js","utils/shuffle.js"],"sourcesContent":["// src/utils/choices.js\r\nimport { shuffle } from \"./shuffle\";\r\n\r\n/** Extract the \"correct\" text for any card. */\r\nexport function getCorrectText(card) {\r\n  if (!card) return \"\";\r\n  if (card.type === \"tf\") return card.answerBool ? \"True\" : \"False\";\r\n  if (card.type === \"mc\" && Array.isArray(card.options)) {\r\n    return card.options?.[card.answerIndex] ?? \"\";\r\n  }\r\n  return (card.expected || \"\").toString();\r\n}\r\n\r\n// Topic keyword â†’ curated distractors (short, plausible, but wrong)\r\nconst TOPIC_DISTRACTORS = [\r\n  {\r\n    keys: [\"autism\", \"autistic\", \"sensory\", \"noise\"],\r\n    items: [\r\n      \"Punish stimming behaviors\",\r\n      \"Increase background noise to desensitize\",\r\n      \"Force eye contact throughout activity\",\r\n      \"Ignore sensory breaks\",\r\n      \"Remove all routines and visuals\",\r\n    ],\r\n  },\r\n  {\r\n    keys: [\"diabetes\"],\r\n    items: [\r\n      \"Skip pre-activity snack\",\r\n      \"Add unplanned high-intensity intervals\",\r\n      \"Never check blood glucose around activity\",\r\n      \"Avoid carrying fast-acting carbs\",\r\n    ],\r\n  },\r\n  {\r\n    keys: [\"cardio\", \"cardiovascular\", \"hypertension\", \"heart\"],\r\n    items: [\r\n      \"Maximal testing session day one\",\r\n      \"Sustained heavy isometrics\",\r\n      \"No warm-up or cool-down\",\r\n      \"Hold breath during lifts (Valsalva)\",\r\n    ],\r\n  },\r\n  {\r\n    keys: [\"ms\", \"multiple sclerosis\"],\r\n    items: [\r\n      \"Exercise in a hot gym without cooling\",\r\n      \"Long, continuous bouts without breaks\",\r\n      \"Avoid hydration to reduce bathroom trips\",\r\n      \"Schedule mid-afternoon in peak fatigue\",\r\n    ],\r\n  },\r\n  {\r\n    keys: [\"blind\", \"visual\", \"visually impaired\"],\r\n    items: [\r\n      \"Start with free weights without orientation\",\r\n      \"No tactile or auditory cues\",\r\n      \"Randomize equipment placement daily\",\r\n      \"Spotter stands silent and far away\",\r\n    ],\r\n  },\r\n];\r\n\r\n// Generic last-resort distractors\r\nconst GENERIC_DISTRACTORS = [\r\n  \"Ignore symptoms and continue\",\r\n  \"Increase intensity immediately\",\r\n  \"One-size-fits-all program\",\r\n  \"No modifications/controls needed\",\r\n  \"Delay communication with caregivers\",\r\n  \"Skip safety briefing\",\r\n];\r\n\r\nfunction topicMatches(prompt = \"\", topic) {\r\n  const p = prompt.toLowerCase();\r\n  return topic.keys.some((k) => p.includes(k));\r\n}\r\n\r\n/**\r\n * Build MC choices for a recall/malformed card.\r\n * Always returns 3â€“4 options (correct + 2â€“3 distractors) if at all possible.\r\n */\r\nexport function buildMCFromRecall(card, pool, targetChoices = 4) {\r\n  const correct = getCorrectText(card)?.trim();\r\n  if (!correct) return null;\r\n\r\n  // 1) Pull candidate distractors from other cards' correct texts\r\n  const fromPool = [];\r\n  for (const c of pool) {\r\n    const txt = getCorrectText(c)?.trim();\r\n    if (!txt) continue;\r\n    if (txt.toLowerCase() === correct.toLowerCase()) continue;\r\n    fromPool.push(txt);\r\n  }\r\n\r\n  // 2) Add topic-specific distractors if needed\r\n  const topical = TOPIC_DISTRACTORS.find((t) => topicMatches(card.prompt, t));\r\n  const topicAdds = topical ? topical.items : [];\r\n\r\n  // 3) Add generic if still short\r\n  const candidates = Array.from(new Set([...fromPool, ...topicAdds, ...GENERIC_DISTRACTORS]))\r\n    .filter((t) => t && t.length >= 3 && t.length <= 160 && t.toLowerCase() !== correct.toLowerCase());\r\n\r\n  // Pick distractors (prefer more choices, but allow 2 if thatâ€™s all we can build)\r\n  const need = Math.max(2, Math.min(targetChoices - 1, candidates.length));\r\n  if (need < 2) {\r\n    // still not enough to make MC reasonably\r\n    return null;\r\n  }\r\n\r\n  const distractors = shuffle(candidates).slice(0, need);\r\n  const options = shuffle([correct, ...distractors]);\r\n  const answerIndex = options.findIndex((t) => t === correct);\r\n\r\n  return { options, answerIndex };\r\n}\r\n","// src/screens/Flashcards/Quiz.jsx\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { useStore } from \"../../context/StoreProvider\";\r\nimport { selectByDeck } from \"../../utils/scheduler\";\r\nimport { shuffle } from \"../../utils/shuffle\";\r\nimport { buildMCFromRecall, getCorrectText } from \"../../utils/choices\";\r\n\r\n// Decide safe mode for a card; try to auto-build MC for recall.\r\nfunction normalizeCard(card, pool) {\r\n  if (!card) return { mode: \"empty\" };\r\n\r\n  // Native TF\r\n  if (card.type === \"tf\" && typeof card.answerBool === \"boolean\")\r\n    return { mode: \"tf\" };\r\n\r\n  // Native MC\r\n  if (card.type === \"mc\" && Array.isArray(card.options) && card.options.length >= 2)\r\n    return { mode: \"mc\" };\r\n\r\n  // Try to auto-build MC from recall / malformed\r\n  const built = buildMCFromRecall(card, pool, 4);\r\n  if (built && Array.isArray(built.options) && built.options.length >= 2) {\r\n    return { mode: \"mc-auto\", built };\r\n  }\r\n\r\n  // Fall back to reveal-only\r\n  const expected =\r\n    card?.expected ??\r\n    (card?.type === \"mc\" && typeof card?.answerIndex === \"number\" && card?.options\r\n      ? card.options[card.answerIndex]\r\n      : undefined);\r\n\r\n  return { mode: \"reveal\", expected };\r\n}\r\n\r\nexport default function Quiz() {\r\n  const { BANK, deck, settings } = useStore();\r\n\r\n  const pool = useMemo(() => selectByDeck(BANK, deck), [BANK, deck]);\r\n  const quizSet = useMemo(() => {\r\n    const base = shuffle(pool).slice(0, settings.quizLength || 10);\r\n    return base;\r\n  }, [pool, settings.quizLength]);\r\n\r\n  const [i, setI] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [revealed, setRevealed] = useState(false);\r\n  const [picked, setPicked] = useState(null);\r\n  const [misses, setMisses] = useState([]); // {idx, prompt, your, correct}\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  const card = quizSet[i];\r\n  const norm = normalizeCard(card, pool);\r\n\r\n  if (!quizSet.length || !card) {\r\n    return (\r\n      <div className=\"rounded-2xl border border-white/10 bg-white/[0.04] p-6\">\r\n        <div className=\"text-lg font-semibold mb-1\">No quiz cards available.</div>\r\n        <div className=\"text-sm text-zinc-300/80\">Try switching decks or adding more items.</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // progress = count current only after answering/revealing\r\n  const progressPct = (() => {\r\n    if (showSummary) return 100;\r\n    const answered = revealed ? i + 1 : i;\r\n    return Math.round((answered / quizSet.length) * 100);\r\n  })();\r\n\r\n  const recordMiss = (yourAnswer) => {\r\n    const correctText =\r\n      norm.mode === \"mc-auto\"\r\n        ? norm.built.options[norm.built.answerIndex]\r\n        : getCorrectText(card) || norm.expected || \"â€”\";\r\n    setMisses((m) => [\r\n      ...m,\r\n      { idx: i + 1, prompt: card.prompt, your: yourAnswer ?? \"â€”\", correct: correctText },\r\n    ]);\r\n  };\r\n\r\n  const next = () => {\r\n    const last = i + 1 >= quizSet.length;\r\n    if (last) {\r\n      setShowSummary(true);\r\n      return;\r\n    }\r\n    setI(i + 1);\r\n    setRevealed(false);\r\n    setPicked(null);\r\n  };\r\n\r\n  const restart = () => {\r\n    setI(0);\r\n    setScore(0);\r\n    setRevealed(false);\r\n    setPicked(null);\r\n    setMisses([]);\r\n    setShowSummary(false);\r\n  };\r\n\r\n  // --- Handlers ---\r\n  const pickTF = (ans) => {\r\n    if (revealed || norm.mode !== \"tf\") return;\r\n    const correct = ans === card.answerBool;\r\n    setScore((s) => s + (correct ? 1 : 0));\r\n    setPicked(ans ? \"True\" : \"False\");\r\n    if (!correct) recordMiss(ans ? \"True\" : \"False\");\r\n    setRevealed(true);\r\n  };\r\n\r\n  const pickMC = (idx, isAuto = false) => {\r\n    if (revealed || (norm.mode !== \"mc\" && norm.mode !== \"mc-auto\")) return;\r\n    const correctIndex = isAuto ? norm.built.answerIndex : card.answerIndex;\r\n    const options = isAuto ? norm.built.options : card.options;\r\n\r\n    const correct = idx === correctIndex;\r\n    setScore((s) => s + (correct ? 1 : 0));\r\n    setPicked(idx);\r\n    if (!correct) recordMiss(options?.[idx]);\r\n    setRevealed(true);\r\n  };\r\n\r\n  // -------- Summary View --------\r\n  if (showSummary) {\r\n    const total = quizSet.length;\r\n    const pct = Math.round((score / total) * 100);\r\n    return (\r\n      <div className=\"rounded-2xl border border-white/10 bg-white/[0.04] p-6 shadow-lg shadow-black/20\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"text-xs uppercase tracking-wider text-emerald-300\">Results â€¢ {deck}</div>\r\n          <div className=\"text-xs px-3 py-1 rounded-full bg-white/[0.06] border border-white/10\">\r\n            Score: <span className=\"font-semibold\">{score}</span>/{total} ({pct}%)\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"h-2 w-full rounded-full bg-white/5 overflow-hidden mb-5 border border-white/10\">\r\n          <div className=\"h-full bg-emerald-500/80 transition-all\" style={{ width: \"100%\" }} />\r\n        </div>\r\n\r\n        {misses.length === 0 ? (\r\n          <div className=\"rounded-xl border border-emerald-400/30 bg-emerald-500/10 p-4\">\r\n            ðŸŽ‰ Perfect! You didnâ€™t miss any questions.\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"text-sm text-zinc-300/90\">\r\n              You missed <span className=\"font-semibold\">{misses.length}</span>:\r\n            </div>\r\n            <ol className=\"space-y-3\">\r\n              {misses.map((m, idx) => (\r\n                <li key={idx} className=\"rounded-xl border border-white/10 bg-white/[0.06] p-3\">\r\n                  <div className=\"text-sm font-medium mb-1\">\r\n                    {m.idx}. {m.prompt}\r\n                  </div>\r\n                  <div className=\"text-xs\">\r\n                    <span className=\"text-zinc-400\">Your answer:</span>{\" \"}\r\n                    <span className=\"text-red-200\">{m.your}</span>\r\n                  </div>\r\n                  <div className=\"text-xs\">\r\n                    <span className=\"text-zinc-400\">Correct:</span>{\" \"}\r\n                    <span className=\"text-emerald-200\">{m.correct}</span>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mt-6 flex items-center justify-end\">\r\n          <button\r\n            onClick={restart}\r\n            className=\"px-3 py-2 rounded-xl bg-emerald-500/90 hover:bg-emerald-500 text-black font-medium transition\"\r\n          >\r\n            Restart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // -------- Question View --------\r\n  const topBar = (\r\n    <div className=\"flex items-center justify-between mb-4\">\r\n      <div className=\"text-xs uppercase tracking-wider text-emerald-300\">\r\n        Quiz â€¢ {deck} â€¢ {i + 1}/{quizSet.length}\r\n      </div>\r\n      <div className=\"text-xs px-3 py-1 rounded-full bg-white/[0.06] border border-white/10\">\r\n        Score: <span className=\"font-semibold\">{score}</span>/{i}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const progress = (\r\n    <div className=\"h-2 w-full rounded-full bg-white/5 overflow-hidden mb-5 border border-white/10\">\r\n      <div className=\"h-full bg-emerald-500/80 transition-all\" style={{ width: `${progressPct}%` }} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"rounded-2xl border border-white/10 bg-white/[0.04] p-6 shadow-lg shadow-black/20\">\r\n      {topBar}\r\n      {progress}\r\n\r\n      <div className=\"text-lg font-medium leading-relaxed mb-5\">{card.prompt}</div>\r\n\r\n      {/* TF */}\r\n      {norm.mode === \"tf\" && (\r\n        <div className=\"flex gap-2\">\r\n          {[\"True\", \"False\"].map((lbl) => {\r\n            const isCorrect = lbl === (card.answerBool ? \"True\" : \"False\");\r\n            const base = \"flex-1 px-3 py-2 rounded-xl border transition text-center\";\r\n            const idle = \"bg-white/[0.06] border-white/10 hover:bg-white/[0.1]\";\r\n            const revealedClass = isCorrect\r\n              ? \"bg-emerald-500/10 border-emerald-400/40\"\r\n              : \"bg-white/[0.06] border-white/10\";\r\n            return (\r\n              <button\r\n                key={lbl}\r\n                onClick={() => pickTF(lbl === \"True\")}\r\n                className={`${base} ${revealed ? revealedClass : idle}`}\r\n              >\r\n                {lbl}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {/* Native MC or Auto MC */}\r\n      {(norm.mode === \"mc\" || norm.mode === \"mc-auto\") && (\r\n        <div className=\"space-y-2\">\r\n          {(norm.mode === \"mc\" ? card.options : norm.built.options).map((opt, idx) => {\r\n            const correctIndex = norm.mode === \"mc\" ? card.answerIndex : norm.built.answerIndex;\r\n            const correct = idx === correctIndex;\r\n            const isPick = picked === idx;\r\n            const base = \"w-full text-left px-3 py-2 rounded-xl border transition\";\r\n            const idle = \"bg-white/[0.06] border-white/10 hover:bg-white/[0.1]\";\r\n            const revealedClass = correct\r\n              ? \"bg-emerald-500/10 border-emerald-400/40\"\r\n              : isPick\r\n              ? \"bg-red-500/10 border-red-400/40\"\r\n              : \"bg-white/[0.06] border-white/10\";\r\n            return (\r\n              <button\r\n                key={idx}\r\n                onClick={() => pickMC(idx, norm.mode === \"mc-auto\")}\r\n                className={`${base} ${revealed ? revealedClass : idle}`}\r\n              >\r\n                {opt}\r\n              </button>\r\n            );\r\n          })}\r\n          {norm.mode === \"mc-auto\" && (\r\n            <div className=\"text-[11px] text-zinc-400 mt-1\">Choices auto-generated.</div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Reveal fallback */}\r\n      {norm.mode === \"reveal\" && (\r\n        <div className=\"rounded-xl border border-white/10 bg-white/[0.06] p-4 mt-2\">\r\n          {!revealed ? (\r\n            <button\r\n              onClick={() => setRevealed(true)}\r\n              className=\"px-3 py-2 rounded-xl bg-white/[0.06] border border-white/10 hover:bg-white/[0.1] transition\"\r\n            >\r\n              Reveal\r\n            </button>\r\n          ) : (\r\n            <div className=\"space-y-3\">\r\n              {(norm.expected || card.explain) && (\r\n                <>\r\n                  {norm.expected && (\r\n                    <div className=\"text-sm\">\r\n                      <span className=\"font-semibold\">Answer:</span> {norm.expected}\r\n                    </div>\r\n                  )}\r\n                  {card.explain && (\r\n                    <div className=\"text-sm text-zinc-300/90\">{card.explain}</div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n          {!revealed && <div className=\"mt-2 text-xs text-zinc-400\">This card has no preset choices.</div>}\r\n        </div>\r\n      )}\r\n\r\n      {(norm.mode === \"tf\" || norm.mode === \"mc\" || norm.mode === \"mc-auto\") &&\r\n        revealed &&\r\n        card.explain && (\r\n          <div className=\"mt-5 text-sm text-zinc-300/90 bg-white/[0.05] border border-white/10 rounded-xl p-3\">\r\n            {card.explain}\r\n          </div>\r\n        )}\r\n\r\n      <div className=\"mt-6 flex items-center justify-end gap-2\">\r\n        {!revealed ? (\r\n          <span className=\"text-xs text-zinc-400\">Pick an answerâ€¦</span>\r\n        ) : (\r\n          <span\r\n            className={\r\n              \"text-xs px-2 py-1 rounded-full border \" +\r\n              ((norm.mode === \"mc\" || norm.mode === \"mc-auto\")\r\n                ? (picked === (norm.mode === \"mc\" ? card.answerIndex : norm.built.answerIndex)\r\n                    ? \"bg-emerald-500/10 border-emerald-400/40 text-emerald-200\"\r\n                    : \"bg-red-500/10 border-red-400/40 text-red-200\")\r\n                : norm.mode === \"tf\"\r\n                ? (picked === (card.answerBool ? \"True\" : \"False\")\r\n                    ? \"bg-emerald-500/10 border-emerald-400/40 text-emerald-200\"\r\n                    : \"bg-red-500/10 border-red-400/40 text-red-200\")\r\n                : \"bg-white/10 border-white/20 text-zinc-200\")\r\n            }\r\n          >\r\n            {norm.mode === \"reveal\"\r\n              ? \"Revealed\"\r\n              : (norm.mode === \"mc\" || norm.mode === \"mc-auto\")\r\n              ? picked === (norm.mode === \"mc\" ? card.answerIndex : norm.built.answerIndex)\r\n                ? \"Correct\"\r\n                : \"Incorrect\"\r\n              : picked === (card.answerBool ? \"True\" : \"False\")\r\n              ? \"Correct\"\r\n              : \"Incorrect\"}\r\n          </span>\r\n        )}\r\n\r\n        <button\r\n          onClick={next}\r\n          className=\"px-3 py-2 rounded-xl bg-emerald-500/90 hover:bg-emerald-500 text-black font-medium transition\"\r\n        >\r\n          {i + 1 >= quizSet.length ? \"Finish\" : \"Next\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","export function shuffle(arr) {\r\n  const a = [...arr];\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n"],"names":["getCorrectText","card","type","answerBool","Array","isArray","options","_card$options$card$an","_card$options","answerIndex","expected","toString","TOPIC_DISTRACTORS","keys","items","GENERIC_DISTRACTORS","normalizeCard","pool","_card$expected","mode","length","built","_getCorrectText","targetChoices","arguments","undefined","correct","trim","fromPool","c","_getCorrectText2","txt","toLowerCase","push","topical","find","t","topic","p","some","k","includes","topicMatches","prompt","topicAdds","candidates","from","Set","filter","need","Math","max","min","distractors","shuffle","slice","findIndex","buildMCFromRecall","Quiz","BANK","deck","settings","useStore","useMemo","selectByDeck","quizSet","quizLength","i","setI","useState","score","setScore","revealed","setRevealed","picked","setPicked","misses","setMisses","showSummary","setShowSummary","norm","_jsxs","className","children","_jsx","progressPct","answered","round","recordMiss","yourAnswer","correctText","m","idx","your","restart","total","pct","style","width","map","onClick","topBar","progress","concat","lbl","revealedClass","ans","s","pickTF","opt","correctIndex","isAuto","pickMC","explain","_Fragment","next","arr","a","j","floor","random"],"sourceRoot":""}