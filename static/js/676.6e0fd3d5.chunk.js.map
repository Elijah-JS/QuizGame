{"version":3,"file":"static/js/676.6e0fd3d5.chunk.js","mappings":"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","sources":["screens/Flashcards/Learn.js"],"sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from \"react\";\r\nimport { useStore } from \"../../context/StoreProvider\";\r\nimport { selectByDeck } from \"../../utils/scheduler\";\r\n\r\nfunction getAnswerText(card) {\r\n  if (!card) return \"\";\r\n  if (card.type === \"mc\") return card.options?.[card.answerIndex] ?? \"\";\r\n  if (card.type === \"tf\") return card.answerBool ? \"True\" : \"False\";\r\n  return card.expected ?? \"(Review the explanation)\";\r\n}\r\n\r\nexport default function Learn() {\r\n  const { BANK, deck } = useStore();\r\n  const pool = useMemo(() => selectByDeck(BANK, deck), [BANK, deck]);\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const card = pool[index] || null;\r\n\r\n  // Reset flip on card change\r\n  useEffect(() => setFlipped(false), [index, deck]);\r\n\r\n  const next = useCallback(() => {\r\n    if (!pool.length) return;\r\n    setIndex((i) => (i + 1) % pool.length);\r\n  }, [pool.length]);\r\n\r\n  const back = useCallback(() => {\r\n    if (!pool.length) return;\r\n    setIndex((i) => (i - 1 + pool.length) % pool.length);\r\n  }, [pool.length]);\r\n\r\n  // Keyboard shortcuts: Space = flip, ArrowRight = next, ArrowLeft = back\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      if (e.target.tagName === \"TEXTAREA\" || e.target.tagName === \"INPUT\") return;\r\n      if (e.code === \"Space\") {\r\n        e.preventDefault();\r\n        setFlipped((f) => !f);\r\n      } else if (e.code === \"ArrowRight\") {\r\n        next();\r\n      } else if (e.code === \"ArrowLeft\") {\r\n        back();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [next, back]);\r\n\r\n  if (!pool.length || !card) {\r\n    return (\r\n      <div className=\"rounded-3xl border border-white/10 bg-white/[0.045] p-6 md:p-8 text-center\">\r\n        <div className=\"text-lg font-semibold mb-1\">No cards available ðŸŽ‰</div>\r\n        <div className=\"text-sm text-zinc-300/80\">Add or switch decks to start learning.</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const answerText = getAnswerText(card);\r\n\r\n  return (\r\n    <div className=\"space-y-5\">\r\n      {/* Header row */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"text-xs uppercase tracking-wider text-emerald-300\">\r\n          Learn â€¢ {deck}\r\n        </div>\r\n        <div className=\"text-xs px-3 py-1 rounded-full bg-white/[0.06] border border-white/10\">\r\n          {index + 1}/{pool.length}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Flip card */}\r\n      <div\r\n        className=\"relative w-full h-[280px] sm:h-[320px] md:h-[360px] [perspective:1200px]\"\r\n        onClick={() => setFlipped((f) => !f)}\r\n      >\r\n        <div\r\n          className={\r\n            \"absolute inset-0 transition-transform duration-500 [transform-style:preserve-3d] rounded-2xl \" +\r\n            (flipped ? \"[transform:rotateY(180deg)]\" : \"\")\r\n          }\r\n        >\r\n          {/* Front */}\r\n          <div className=\"absolute inset-0 rounded-2xl border border-white/10 bg-white/[0.055] backdrop-blur-xl shadow-2xl shadow-black/30 p-5 sm:p-6 [backface-visibility:hidden] flex\">\r\n            <div className=\"m-auto text-center\">\r\n              <div className=\"text-[11px] uppercase tracking-wider text-emerald-300 mb-2\">\r\n                Prompt\r\n              </div>\r\n              <div className=\"text-lg md:text-xl font-medium leading-relaxed\">\r\n                {card.prompt}\r\n              </div>\r\n              <div className=\"mt-3 text-[12px] text-zinc-400\">\r\n                Click or press <span className=\"text-white/90 font-medium\">Space</span> to reveal\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Back */}\r\n          <div className=\"absolute inset-0 rounded-2xl border border-white/10 bg-white/[0.07] backdrop-blur-xl shadow-2xl shadow-black/30 p-5 sm:p-6 [backface-visibility:hidden] [transform:rotateY(180deg)] flex\">\r\n            <div className=\"m-auto text-center max-w-2xl\">\r\n              <div className=\"text-[11px] uppercase tracking-wider text-emerald-300 mb-2\">\r\n                Answer\r\n              </div>\r\n              <div className=\"text-lg md:text-xl font-semibold\">{answerText}</div>\r\n              {card.explain && (\r\n                <div className=\"mt-3 text-sm text-zinc-300/90\">{card.explain}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <button\r\n          onClick={back}\r\n          className=\"px-4 py-2 rounded-xl bg-white/[0.06] border border-white/10 hover:bg-white/[0.1] transition\"\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          onClick={next}\r\n          className=\"px-4 py-2 rounded-xl bg-emerald-500/90 hover:bg-emerald-500 text-black font-medium transition\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Learn","BANK","deck","useStore","pool","useMemo","selectByDeck","index","setIndex","useState","flipped","setFlipped","card","useEffect","next","useCallback","length","i","back","onKey","e","target","tagName","code","preventDefault","f","window","addEventListener","removeEventListener","_jsxs","className","children","_jsx","answerText","_card$options$card$an","_card$options","_card$expected","type","options","answerIndex","answerBool","expected","getAnswerText","onClick","prompt","explain"],"sourceRoot":""}