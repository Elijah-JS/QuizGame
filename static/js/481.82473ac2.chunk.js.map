{"version":3,"file":"static/js/481.82473ac2.chunk.js","mappings":"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","sources":["screens/Scenarios/Practice.js","utils/shuffle.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { useStore } from \"../../context/StoreProvider\";\r\nimport { selectByDeck } from \"../../utils/scheduler\";\r\nimport { shuffle } from \"../../utils/shuffle\";\r\n\r\nexport default function Practice() {\r\n  const { BANK, deck } = useStore();\r\n\r\n  // pick scenario-type first; otherwise MC/TF cards (no recall)\r\n  const pool = useMemo(() => {\r\n    const byDeck = selectByDeck(BANK, deck);\r\n    const tagged = byDeck.filter((q) => q.type === \"scenario\");\r\n    return tagged.length ? tagged : byDeck.filter((q) => q.type !== \"recall\");\r\n  }, [BANK, deck]);\r\n\r\n  // allow reshuffle on restart by bumping a seed\r\n  const [seed, setSeed] = useState(0);\r\n  const set = useMemo(() => shuffle(pool).slice(0, 12), [pool, seed]);\r\n\r\n  // per-run state\r\n  const [i, setI] = useState(0);\r\n  const [revealed, setRevealed] = useState(false);\r\n  const [picked, setPicked] = useState(null);\r\n  const [results, setResults] = useState([]); // [{id, prompt, correct, your, correctText, explain}]\r\n  const card = set[i];\r\n\r\n  if (!set.length) {\r\n    return (\r\n      <div className=\"p-6 rounded-2xl border border-white/10 bg-zinc-900/60\">\r\n        No scenario cards in this deck yet.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isTF = card.type === \"tf\";\r\n  const isMC = card.type === \"mc\" || card.type === \"scenario\";\r\n\r\n  const computeChoiceStrings = (idx) => {\r\n    if (isTF) {\r\n      const your = idx === 0 ? \"True\" : \"False\";\r\n      const correctText = card.answerBool ? \"True\" : \"False\";\r\n      const correct = (idx === 0) === card.answerBool;\r\n      return { your, correctText, correct };\r\n    }\r\n    // MC/scenario\r\n    const your = card.options[idx];\r\n    const correctText = card.options[card.answerIndex];\r\n    const correct = idx === card.answerIndex;\r\n    return { your, correctText, correct };\r\n  };\r\n\r\n  const pick = (idx) => {\r\n    if (revealed) return;\r\n    const { your, correctText, correct } = computeChoiceStrings(idx);\r\n    setPicked(idx);\r\n    setRevealed(true);\r\n    // store result immediately\r\n    setResults((prev) => [\r\n      ...prev,\r\n      {\r\n        id: card.id,\r\n        prompt: card.prompt,\r\n        correct,\r\n        your,\r\n        correctText,\r\n        explain: card.explain || \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const next = () => {\r\n    // if already finished, do nothing\r\n    if (results.length >= set.length) return;\r\n    if (i + 1 >= set.length) {\r\n      // will trigger summary view via results.length === set.length\r\n      setI(i); // stay\r\n      setRevealed(false);\r\n      setPicked(null);\r\n    } else {\r\n      setI((x) => x + 1);\r\n      setRevealed(false);\r\n      setPicked(null);\r\n    }\r\n  };\r\n\r\n  const restart = () => {\r\n    setSeed((s) => s + 1); // reshuffle\r\n    setI(0);\r\n    setResults([]);\r\n    setRevealed(false);\r\n    setPicked(null);\r\n  };\r\n\r\n  const progress = Math.min(results.length / set.length, 1);\r\n\r\n  // ----- SUMMARY VIEW -----\r\n  if (results.length === set.length) {\r\n    const correctCount = results.filter((r) => r.correct).length;\r\n    const missed = results.filter((r) => !r.correct);\r\n\r\n    return (\r\n      <div className=\"p-6 rounded-2xl border border-white/10 bg-zinc-900/60\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"text-xs uppercase tracking-wider text-emerald-400/90\">\r\n            Scenario Practice â€¢ {deck}\r\n          </div>\r\n          <div className=\"text-sm text-zinc-300\">\r\n            Score: <span className=\"font-semibold\">{correctCount}</span> / {set.length}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"h-1.5 w-full bg-white/10 rounded-full overflow-hidden mb-6\">\r\n          <div\r\n            className=\"h-full bg-emerald-500 transition-all\"\r\n            style={{ width: `${progress * 100}%` }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"rounded-xl border border-white/10 bg-white/[0.03] p-4 mb-6\">\r\n          <div className=\"text-lg font-semibold mb-1\">Great work!</div>\r\n          <div className=\"text-sm text-zinc-300/90\">\r\n            You answered <span className=\"font-medium\">{correctCount}</span> of{\" \"}\r\n            {set.length} correctly.\r\n          </div>\r\n        </div>\r\n\r\n        {missed.length > 0 && (\r\n          <div className=\"space-y-3\">\r\n            <div className=\"text-sm font-semibold text-zinc-200\">\r\n              Review what you missed\r\n            </div>\r\n            {missed.map((m, idx) => (\r\n              <div\r\n                key={m.id}\r\n                className=\"rounded-xl border border-red-500/30 bg-red-900/10 p-4\"\r\n              >\r\n                <div className=\"text-sm font-medium mb-1\">\r\n                  {idx + 1}. {m.prompt}\r\n                </div>\r\n                <div className=\"text-xs\">\r\n                  <div className=\"mb-1\">\r\n                    <span className=\"text-zinc-400\">Your answer:</span>{\" \"}\r\n                    <span className=\"text-red-300\">{m.your}</span>\r\n                  </div>\r\n                  <div className=\"mb-1\">\r\n                    <span className=\"text-zinc-400\">Correct:</span>{\" \"}\r\n                    <span className=\"text-emerald-300\">{m.correctText}</span>\r\n                  </div>\r\n                  {m.explain && (\r\n                    <div className=\"text-zinc-300/90\">{m.explain}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mt-6 flex items-center justify-end gap-2\">\r\n          <button\r\n            onClick={restart}\r\n            className=\"px-3 py-2 rounded-lg bg-emerald-600/80 hover:bg-emerald-600\"\r\n          >\r\n            Try again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ----- PRACTICE VIEW -----\r\n  return (\r\n    <div className=\"p-6 rounded-2xl border border-white/10 bg-zinc-900/60\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"text-xs uppercase tracking-wider text-emerald-400/90\">\r\n          Scenario Practice â€¢ {deck} â€¢ {i + 1}/{set.length}\r\n        </div>\r\n        <div className=\"text-sm text-zinc-300\">\r\n          Score:{\" \"}\r\n          <span className=\"font-semibold\">\r\n            {results.filter((r) => r.correct).length}\r\n          </span>{\" \"}\r\n          / {set.length}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"h-1.5 w-full bg-white/10 rounded-full overflow-hidden mb-6\">\r\n        <div\r\n          className=\"h-full bg-emerald-500 transition-all\"\r\n          style={{ width: `${progress * 100}%` }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"text-lg font-medium mb-4\">{card.prompt}</div>\r\n\r\n      {isTF && (\r\n        <div className=\"grid grid-cols-2 gap-2\">\r\n          {[\"True\", \"False\"].map((lbl, idx) => {\r\n            const correctLbl = card.answerBool ? \"True\" : \"False\";\r\n            const isCorrectBtn = lbl === correctLbl;\r\n            const isPick = picked === idx;\r\n            return (\r\n              <button\r\n                key={lbl}\r\n                onClick={() => pick(idx)}\r\n                className={\r\n                  \"px-3 py-2 rounded-xl border text-center \" +\r\n                  (revealed\r\n                    ? isCorrectBtn\r\n                      ? \"bg-emerald-900/40 border-emerald-600/50\"\r\n                      : isPick\r\n                      ? \"bg-red-900/30 border-red-600/50\"\r\n                      : \"bg-zinc-800 border-white/10\"\r\n                    : \"bg-zinc-800 border-white/10 hover:bg-zinc-700\")\r\n                }\r\n              >\r\n                {lbl}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {isMC && (\r\n        <div className=\"space-y-2\">\r\n          {card.options.map((opt, idx) => {\r\n            const correct = idx === card.answerIndex;\r\n            const isPick = picked === idx;\r\n            return (\r\n              <button\r\n                key={idx}\r\n                onClick={() => pick(idx)}\r\n                className={\r\n                  \"w-full text-left px-3 py-2 rounded-xl border \" +\r\n                  (revealed\r\n                    ? correct\r\n                      ? \"bg-emerald-900/40 border-emerald-600/50\"\r\n                      : isPick\r\n                      ? \"bg-red-900/30 border-red-600/50\"\r\n                      : \"bg-zinc-800 border-white/10\"\r\n                    : \"bg-zinc-800 border-white/10 hover:bg-zinc-700\")\r\n                }\r\n              >\r\n                {opt}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {revealed && card.explain && (\r\n        <div className=\"mt-4 text-sm text-zinc-300/90\">{card.explain}</div>\r\n      )}\r\n\r\n      <div className=\"mt-5 flex items-center justify-end gap-2\">\r\n        <button\r\n          onClick={next}\r\n          disabled={!revealed}\r\n          className={\r\n            \"px-3 py-2 rounded-lg transition \" +\r\n            (revealed\r\n              ? \"bg-emerald-600/80 hover:bg-emerald-600\"\r\n              : \"bg-zinc-700 cursor-not-allowed\")\r\n          }\r\n        >\r\n          {i + 1 >= set.length ? \"Finish\" : \"Next\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function shuffle(arr) {\r\n  const a = [...arr];\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n"],"names":["Practice","BANK","deck","useStore","pool","useMemo","byDeck","selectByDeck","tagged","filter","q","type","length","seed","setSeed","useState","set","shuffle","slice","i","setI","revealed","setRevealed","picked","setPicked","results","setResults","card","_jsx","className","children","isTF","isMC","pick","idx","your","correctText","correct","answerBool","options","answerIndex","computeChoiceStrings","prev","id","prompt","explain","restart","s","progress","Math","min","correctCount","r","missed","_jsxs","style","width","concat","map","m","onClick","lbl","isCorrectBtn","isPick","opt","next","x","disabled","arr","a","j","floor","random"],"sourceRoot":""}